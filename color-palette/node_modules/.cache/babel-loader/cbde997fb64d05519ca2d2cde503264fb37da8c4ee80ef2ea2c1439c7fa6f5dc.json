{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { ChromePicker } from 'react-color';\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport \"./EditMyColors.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditMyColors = ({\n  isOpen,\n  onClose,\n  initialColor,\n  onColorUpdate\n}) => {\n  _s();\n  const [currentColor, setCurrentColor] = useState(initialColor);\n  useEffect(() => {\n    setCurrentColor(initialColor); // Ensure that initialColor changes are reflected\n  }, [initialColor]);\n  const handleColorChange = useCallback(color => {\n    setCurrentColor(color.hex); // Update the current color directly\n    if (onColorUpdate) {\n      onColorUpdate(color.hex); // Call the callback if provided\n    }\n  }, [onColorUpdate]);\n  const handleCancel = () => {\n    if (onColorUpdate) {\n      onColorUpdate(initialColor); // Revert to the initial color\n    }\n    onClose(); // Close the modal\n  };\n  const onWrapperClick = event => {\n    if (event.target.classList.contains(\"modal-wrapper\")) onClose();\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-wrapper\",\n    onClick: onWrapperClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-button\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(IconClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: currentColor,\n        onChangeComplete: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClose(),\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(EditMyColors, \"hWh+HdilF7GTwcW7Qam21u+zkfk=\");\n_c = EditMyColors;\nvar _c;\n$RefreshReg$(_c, \"EditMyColors\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChromePicker","ReactComponent","IconClose","jsxDEV","_jsxDEV","EditMyColors","isOpen","onClose","initialColor","onColorUpdate","_s","currentColor","setCurrentColor","handleColorChange","color","hex","handleCancel","onWrapperClick","event","target","classList","contains","className","onClick","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onChangeComplete","marginRight","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { ChromePicker } from 'react-color';\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport \"./EditMyColors.css\";\n\nexport const EditMyColors = ({ isOpen, onClose, initialColor, onColorUpdate }) => {\n  const [currentColor, setCurrentColor] = useState(initialColor);\n\n  useEffect(() => {\n    setCurrentColor(initialColor); // Ensure that initialColor changes are reflected\n  }, [initialColor]);\n\n  const handleColorChange = useCallback((color) => {\n    setCurrentColor(color.hex);  // Update the current color directly\n    if (onColorUpdate) {\n      onColorUpdate(color.hex);  // Call the callback if provided\n    }\n\n    \n\n  }, [onColorUpdate]);\n\n  const handleCancel = () => {\n    if (onColorUpdate) {\n      onColorUpdate(initialColor); // Revert to the initial color\n    }\n    onClose(); // Close the modal\n  };\n\n  const onWrapperClick = (event) => {\n    if (event.target.classList.contains(\"modal-wrapper\")) onClose();\n  }\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-wrapper\" onClick={onWrapperClick}>\n      <div className=\"modal-content\" style={{ textAlign: 'center' }}>\n        <button className=\"modal-close-button\" onClick={onClose}>\n          <IconClose />\n        </button>\n        <ChromePicker\n          color={currentColor}\n          onChangeComplete={handleColorChange}\n        />\n        <div>\n          <button onClick={() => onClose()} style={{ marginRight: '10px' }}>Save</button>\n          <button onClick={handleCancel}>Cancel</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}