{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/ColorPicker.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { ChromePicker } from 'react-color';\nimport _ from 'lodash';\nimport { apiRequest } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ColorPicker({\n  onAddColor\n}) {\n  _s();\n  const [currentColor, setCurrentColor] = useState({\n    r: 255,\n    g: 255,\n    b: 255,\n    a: 1\n  });\n  const [showNiceMessage, setShowNiceMessage] = useState(false);\n  const handleColorChange = useCallback(_.throttle(color => {\n    setCurrentColor(color.rgb);\n  }, 100), []);\n  const handleAddColor = () => {\n    const hexColor = `#${((1 << 24) + (currentColor.r << 16) + (currentColor.g << 8) + currentColor.b).toString(16).slice(1)}`;\n    const existingColors = JSON.parse(localStorage.getItem('colors')) || [];\n\n    // Check if the color already exists\n    if (existingColors.some(color => color.hex === hexColor)) {\n      alert('You already have this color in your library.'); // You can change this to a nicer notification if you prefer\n      return;\n    }\n    localStorage.setItem('colors', JSON.stringify([...existingColors, {\n      hex: hexColor\n    }]));\n    //add color to the database\n\n    let userData = JSON.parse(localStorage.getItem('userData'));\n    let user_id = userData.userId;\n    let token = userData.token;\n    try {\n      apiRequest('/users/', 'POST', {\n        user_id: user_id,\n        token: token,\n        color: hexColor\n      }, true);\n    } catch (error) {\n      console.log(error);\n    }\n    setShowNiceMessage(true);\n    setTimeout(() => {\n      setShowNiceMessage(false); // Hide message\n    }, 2000); // Message shows for 2 seconds\n  };\n  const styleButton = {\n    backgroundColor: 'black',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    marginTop: '10px'\n  };\n  const appStyle = {\n    backgroundColor: `rgba(${currentColor.r}, ${currentColor.g}, ${currentColor.b}, ${currentColor.a})`,\n    height: \"100vh\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: \"center\"\n  };\n  const messageStyle = {\n    position: 'absolute',\n    top: '25%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    fontSize: '6em',\n    color: 'white',\n    textShadow: '2px 2px 8px rgba(0,0,0,0.5)',\n    opacity: showNiceMessage ? 1 : 0,\n    transition: 'opacity 0.5s ease-in-out',\n    pointerEvents: 'none',\n    // Makes it non-interactive\n    zIndex: 1000 // Ensures it is on top\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: appStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Color Palette\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: currentColor,\n        onChange: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddColor,\n        style: styleButton,\n        children: \"Add Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), showNiceMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: messageStyle,\n        children: \"Added to your colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(ColorPicker, \"rFFj4knd2Mog5DZu0Id/8lorbSc=\");\n_c = ColorPicker;\nexport default ColorPicker;\nvar _c;\n$RefreshReg$(_c, \"ColorPicker\");","map":{"version":3,"names":["useState","useCallback","ChromePicker","_","apiRequest","jsxDEV","_jsxDEV","ColorPicker","onAddColor","_s","currentColor","setCurrentColor","r","g","b","a","showNiceMessage","setShowNiceMessage","handleColorChange","throttle","color","rgb","handleAddColor","hexColor","toString","slice","existingColors","JSON","parse","localStorage","getItem","some","hex","alert","setItem","stringify","userData","user_id","userId","token","error","console","log","setTimeout","styleButton","backgroundColor","padding","border","borderRadius","cursor","marginTop","appStyle","height","display","alignItems","justifyContent","textAlign","messageStyle","position","top","left","transform","fontSize","textShadow","opacity","transition","pointerEvents","zIndex","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/ColorPicker.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { ChromePicker } from 'react-color';\nimport _ from 'lodash';\nimport { apiRequest } from './api';\n\n\nfunction ColorPicker({ onAddColor }) {\n\n\n  const [currentColor, setCurrentColor] = useState({\n    r: 255,\n    g: 255,\n    b: 255,\n    a: 1\n  });\n  const [showNiceMessage, setShowNiceMessage] = useState(false);\n\n  const handleColorChange = useCallback(_.throttle((color) => {\n    setCurrentColor(color.rgb);\n  }, 100), []); \n\n  const handleAddColor = () => {\n    const hexColor = `#${((1 << 24) + (currentColor.r << 16) + (currentColor.g << 8) + currentColor.b).toString(16).slice(1)}`;\n\n    const existingColors = JSON.parse(localStorage.getItem('colors')) || [];\n\n    // Check if the color already exists\n    if (existingColors.some(color => color.hex === hexColor)) {\n      alert('You already have this color in your library.'); // You can change this to a nicer notification if you prefer\n      return;\n    }\n\n    localStorage.setItem('colors', JSON.stringify([...existingColors, { hex: hexColor}]));\n    //add color to the database\n\n    let userData = JSON.parse(localStorage.getItem('userData'));\n    let user_id = userData.userId;\n    let token = userData.token;\n\n    try {\n      apiRequest('/users/', 'POST', {\n        user_id: user_id,\n        token: token,\n        color: hexColor\n      }, true);\n\n    } catch (error) {\n      console.log(error);\n    }\n\n    \n    setShowNiceMessage(true);\n    setTimeout(() => {\n      setShowNiceMessage(false); // Hide message\n    }, 2000); // Message shows for 2 seconds\n  };\n  \n\n\n  const styleButton = {\n    backgroundColor: 'black',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    marginTop: '10px',\n\n\n  }\n\n  const appStyle = {\n    backgroundColor: `rgba(${currentColor.r}, ${currentColor.g}, ${currentColor.b}, ${currentColor.a})`,\n    height: \"100vh\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: \"center\",\n  };\n\n  const messageStyle = {\n    position: 'absolute',\n    top: '25%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    fontSize: '6em',\n    color: 'white',\n    textShadow: '2px 2px 8px rgba(0,0,0,0.5)',\n    opacity: showNiceMessage ? 1 : 0,\n    transition: 'opacity 0.5s ease-in-out',\n    pointerEvents: 'none',  // Makes it non-interactive\n    zIndex: 1000  // Ensures it is on top\n  };\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <div>\n        <h1>Color Palette</h1>\n        <ChromePicker \n          color={currentColor}\n          onChange={handleColorChange}\n        />\n        <button onClick={handleAddColor} style={styleButton}>Add Color</button>\n        {showNiceMessage && <div style={messageStyle}>Added to your colors</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default ColorPicker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}