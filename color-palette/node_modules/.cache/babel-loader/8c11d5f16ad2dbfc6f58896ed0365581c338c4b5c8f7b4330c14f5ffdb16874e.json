{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/MyProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { BASE_URL } from '../constants';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaletteGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n  padding: 20px;\n`;\n_c = PaletteGrid;\nconst PaletteBox = styled.div`\n  position: relative;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  cursor: pointer;\n  background-color: #f9f9f9;\n  &:hover {\n    background-color: #e9e9e9;\n  }\n`;\n_c2 = PaletteBox;\nconst ColorPreview = styled.div`\n  height: 40px;\n  width: 100%;\n  background-color: ${props => props.color};\n`;\n_c3 = ColorPreview;\nconst ColorsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  gap: 10px;\n`;\n_c4 = ColorsGrid;\nconst ColorItem = styled.div`\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  background-color: ${props => props.color};\n  color: white;\n  text-align: center;\n`;\n_c5 = ColorItem;\nfunction ProfileDetails() {\n  _s();\n  const [colors, setColors] = useState([]);\n  const [palettes, setPalettes] = useState([]);\n  const {\n    user_id\n  } = useParams();\n  useEffect(() => {\n    fetch(`${BASE_URL}/users/${user_id}/colors`, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json'\n      }\n    }).then(response => response.json()).then(result => {\n      if (result.colors) {\n        setColors(result.colors.map(colorCode => ({\n          hex: colorCode.startsWith('#') ? colorCode : `#${colorCode}`\n        })));\n      }\n    }).catch(error => console.error('Error fetching colors:', error));\n\n    // Fetch palettes for the provided user_id''\n    fetch(`${BASE_URL}/users/${user_id}/palettes`, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json'\n      }\n    }).then(response => response.json()).then(result => {\n      if (result.palettes) {\n        setPalettes(Object.entries(result.palettes).map(([name, colors]) => ({\n          name,\n          colors: colors.map(color => `#${color}`)\n        })));\n      }\n    }).catch(error => console.error('Error fetching palettes:', error));\n  }, [user_id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorsGrid, {\n      children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(ColorItem, {\n        color: color.hex,\n        children: color.hex\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Palettes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaletteGrid, {\n      children: palettes.map(palette => /*#__PURE__*/_jsxDEV(PaletteBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: palette.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), palette.colors.map((color, index) => /*#__PURE__*/_jsxDEV(ColorPreview, {\n          color: color\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this))]\n      }, palette.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileDetails, \"WERZqlGs1T1cwoAXv1FWgLpaGgE=\", false, function () {\n  return [useParams];\n});\n_c6 = ProfileDetails;\nexport default ProfileDetails;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PaletteGrid\");\n$RefreshReg$(_c2, \"PaletteBox\");\n$RefreshReg$(_c3, \"ColorPreview\");\n$RefreshReg$(_c4, \"ColorsGrid\");\n$RefreshReg$(_c5, \"ColorItem\");\n$RefreshReg$(_c6, \"ProfileDetails\");","map":{"version":3,"names":["React","useState","useEffect","styled","BASE_URL","useParams","jsxDEV","_jsxDEV","PaletteGrid","div","_c","PaletteBox","_c2","ColorPreview","props","color","_c3","ColorsGrid","_c4","ColorItem","_c5","ProfileDetails","_s","colors","setColors","palettes","setPalettes","user_id","fetch","method","headers","then","response","json","result","map","colorCode","hex","startsWith","catch","error","console","Object","entries","name","children","fileName","_jsxFileName","lineNumber","columnNumber","index","palette","_c6","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/MyProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { BASE_URL } from '../constants';\nimport { useParams } from 'react-router-dom';\n\nconst PaletteGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n  padding: 20px;\n`;\n\nconst PaletteBox = styled.div`\n  position: relative;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  cursor: pointer;\n  background-color: #f9f9f9;\n  &:hover {\n    background-color: #e9e9e9;\n  }\n`;\n\nconst ColorPreview = styled.div`\n  height: 40px;\n  width: 100%;\n  background-color: ${props => props.color};\n`;\n\nconst ColorsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  gap: 10px;\n`;\n\nconst ColorItem = styled.div`\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  background-color: ${props => props.color};\n  color: white;\n  text-align: center;\n`;\n\nfunction ProfileDetails() {\n  const [colors, setColors] = useState([]);\n  const [palettes, setPalettes] = useState([]);\n  const { user_id } = useParams();\n\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/users/${user_id}/colors`, {\n      method: 'GET',\n      headers: { 'accept': 'application/json' },\n    }).then(response => response.json())\n      .then(result => {\n        if (result.colors) {\n          setColors(result.colors.map(colorCode => ({\n            hex: colorCode.startsWith('#') ? colorCode : `#${colorCode}`\n          })));\n        }\n      })\n      .catch(error => console.error('Error fetching colors:', error));\n\n    // Fetch palettes for the provided user_id''\n    fetch(`${BASE_URL}/users/${user_id}/palettes`, {\n      method: 'GET',\n      headers: { 'accept': 'application/json' },\n    }).then(response => response.json())\n      .then(result => {\n        if (result.palettes) {\n          setPalettes(Object.entries(result.palettes).map(([name, colors]) => ({\n            name,\n            colors: colors.map(color => `#${color}`)\n          })));\n        }\n      })\n      .catch(error => console.error('Error fetching palettes:', error));\n\n  }, [user_id]);\n\n  return (\n    <div>\n      <h1>Colors</h1>\n      <ColorsGrid>\n        {colors.map((color, index) => (\n          <ColorItem key={index} color={color.hex}>\n            {color.hex}\n          </ColorItem>\n        ))}\n      </ColorsGrid>\n      <h1>Palettes</h1>\n      <PaletteGrid>\n        {palettes.map((palette) => (\n          <PaletteBox key={palette.name}>\n            <h3>{palette.name}</h3>\n            {palette.colors.map((color, index) => (\n              <ColorPreview key={index} color={color} />\n            ))}\n          </PaletteBox>\n        ))}\n      </PaletteGrid>\n    </div>\n  );\n}\n\nexport default ProfileDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}