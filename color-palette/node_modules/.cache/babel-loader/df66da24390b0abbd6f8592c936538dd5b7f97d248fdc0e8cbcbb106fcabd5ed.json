{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { BaseGesture } from './gesture';\nexport class TapGesture extends BaseGesture {\n  constructor() {\n    super();\n    _defineProperty(this, \"config\", {});\n    this.handlerName = 'TapGestureHandler';\n    this.shouldCancelWhenOutside(true);\n  }\n  minPointers(minPointers) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n  numberOfTaps(count) {\n    this.config.numberOfTaps = count;\n    return this;\n  }\n  maxDistance(maxDist) {\n    this.config.maxDist = maxDist;\n    return this;\n  }\n  maxDuration(duration) {\n    this.config.maxDurationMs = duration;\n    return this;\n  }\n  maxDelay(delay) {\n    this.config.maxDelayMs = delay;\n    return this;\n  }\n  maxDeltaX(delta) {\n    this.config.maxDeltaX = delta;\n    return this;\n  }\n  maxDeltaY(delta) {\n    this.config.maxDeltaY = delta;\n    return this;\n  }\n}","map":{"version":3,"names":["BaseGesture","TapGesture","constructor","_defineProperty","handlerName","shouldCancelWhenOutside","minPointers","config","numberOfTaps","count","maxDistance","maxDist","maxDuration","duration","maxDurationMs","maxDelay","delay","maxDelayMs","maxDeltaX","delta","maxDeltaY"],"sources":["/Users/saruar/Desktop/color palette/color-palette/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/tapGesture.ts"],"sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport {\n  TapGestureConfig,\n  TapGestureHandlerEventPayload,\n} from '../TapGestureHandler';\n\nexport class TapGesture extends BaseGesture<TapGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & TapGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'TapGestureHandler';\n    this.shouldCancelWhenOutside(true);\n  }\n\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  numberOfTaps(count: number) {\n    this.config.numberOfTaps = count;\n    return this;\n  }\n\n  maxDistance(maxDist: number) {\n    this.config.maxDist = maxDist;\n    return this;\n  }\n\n  maxDuration(duration: number) {\n    this.config.maxDurationMs = duration;\n    return this;\n  }\n\n  maxDelay(delay: number) {\n    this.config.maxDelayMs = delay;\n    return this;\n  }\n\n  maxDeltaX(delta: number) {\n    this.config.maxDeltaX = delta;\n    return this;\n  }\n\n  maxDeltaY(delta: number) {\n    this.config.maxDeltaY = delta;\n    return this;\n  }\n}\n\nexport type TapGestureType = InstanceType<typeof TapGesture>;\n"],"mappings":";;;;;;;;;;;;;AAAA,SAA4BA,WAA5B,QAA+C,WAA/C;AAMA,OAAO,MAAMC,UAAN,SAAyBD,WAAzB,CAAoE;EAGzEE,WAAWA,CAAA,EAAG;IACZ;IADYC,eAAA,iBAFwC,EAExC;IAGZ,KAAKC,WAAL,GAAmB,mBAAnB;IACA,KAAKC,uBAAL,CAA6B,IAA7B;EACD;EAEDC,WAAWA,CAACA,WAAD,EAAsB;IAC/B,KAAKC,MAAL,CAAYD,WAAZ,GAA0BA,WAA1B;IACA,OAAO,IAAP;EACD;EAEDE,YAAYA,CAACC,KAAD,EAAgB;IAC1B,KAAKF,MAAL,CAAYC,YAAZ,GAA2BC,KAA3B;IACA,OAAO,IAAP;EACD;EAEDC,WAAWA,CAACC,OAAD,EAAkB;IAC3B,KAAKJ,MAAL,CAAYI,OAAZ,GAAsBA,OAAtB;IACA,OAAO,IAAP;EACD;EAEDC,WAAWA,CAACC,QAAD,EAAmB;IAC5B,KAAKN,MAAL,CAAYO,aAAZ,GAA4BD,QAA5B;IACA,OAAO,IAAP;EACD;EAEDE,QAAQA,CAACC,KAAD,EAAgB;IACtB,KAAKT,MAAL,CAAYU,UAAZ,GAAyBD,KAAzB;IACA,OAAO,IAAP;EACD;EAEDE,SAASA,CAACC,KAAD,EAAgB;IACvB,KAAKZ,MAAL,CAAYW,SAAZ,GAAwBC,KAAxB;IACA,OAAO,IAAP;EACD;EAEDC,SAASA,CAACD,KAAD,EAAgB;IACvB,KAAKZ,MAAL,CAAYa,SAAZ,GAAwBD,KAAxB;IACA,OAAO,IAAP;EACD;AA3CwE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}