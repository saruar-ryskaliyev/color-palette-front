{"ast":null,"code":"'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { withDelay } from '../../animation';\nimport { ReduceMotion } from '../../commonTypes';\nimport { getReduceMotionFromConfig } from '../../animation/util';\nexport class BaseAnimationBuilder {\n  constructor() {\n    _defineProperty(this, \"durationV\", void 0);\n    _defineProperty(this, \"delayV\", void 0);\n    _defineProperty(this, \"reduceMotionV\", ReduceMotion.System);\n    _defineProperty(this, \"randomizeDelay\", false);\n    _defineProperty(this, \"callbackV\", void 0);\n    _defineProperty(this, \"build\", () => {\n      throw new Error('[Reanimated] Unimplemented method in child class.');\n    });\n  }\n  /**\n   * Lets you adjust the animation duration. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param durationMs - Length of the animation (in milliseconds).\n   */\n  static duration(durationMs) {\n    const instance = this.createInstance();\n    return instance.duration(durationMs);\n  }\n  duration(durationMs) {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the delay before the animation starts (in milliseconds). Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param delayMs - Delay before the animation starts (in milliseconds).\n   */\n  static delay(delayMs) {\n    const instance = this.createInstance();\n    return instance.delay(delayMs);\n  }\n  delay(delayMs) {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  /**\n   * The callback that will fire after the animation ends. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param callback - Callback that will fire after the animation ends.\n   */\n  static withCallback(callback) {\n    const instance = this.createInstance();\n    return instance.withCallback(callback);\n  }\n  withCallback(callback) {\n    this.callbackV = callback;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the behavior when the device's reduced motion accessibility setting is turned on.  Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param reduceMotion - Determines how the animation responds to the device's reduced motion accessibility setting. Default to `ReduceMotion.System` - {@link ReduceMotion}.\n   */\n  static reduceMotion(reduceMotion) {\n    const instance = this.createInstance();\n    return instance.reduceMotion(reduceMotion);\n  }\n  reduceMotion(reduceMotionV) {\n    this.reduceMotionV = reduceMotionV;\n    return this;\n  }\n\n  // 300ms is the default animation duration. If any animation has different default has to override this method.\n  static getDuration() {\n    return 300;\n  }\n  getDuration() {\n    return this.durationV ?? 300;\n  }\n\n  /**\n   * @deprecated Use `.delay()` with `Math.random()` instead\n   */\n  static randomDelay() {\n    const instance = this.createInstance();\n    return instance.randomDelay();\n  }\n  randomDelay() {\n    this.randomizeDelay = true;\n    return this;\n  }\n\n  // when randomizeDelay is set to true, randomize delay between 0 and provided value (or 1000ms if delay is not provided)\n  getDelay() {\n    return this.randomizeDelay ? Math.random() * (this.delayV ?? 1000) : this.delayV ?? 0;\n  }\n  getReduceMotion() {\n    return this.reduceMotionV;\n  }\n  getDelayFunction() {\n    const isDelayProvided = this.randomizeDelay || this.delayV;\n    const reduceMotion = this.getReduceMotion();\n    return isDelayProvided ? (delay, animation) => {\n      'worklet';\n\n      return withDelay(delay, animation, reduceMotion);\n    } : (_, animation) => {\n      'worklet';\n\n      animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n      return animation;\n    };\n  }\n  static build() {\n    const instance = this.createInstance();\n    return instance.build();\n  }\n}\n_defineProperty(BaseAnimationBuilder, \"createInstance\", void 0);","map":{"version":3,"names":["_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","withDelay","ReduceMotion","getReduceMotionFromConfig","BaseAnimationBuilder","constructor","System","Error","duration","durationMs","instance","createInstance","durationV","delay","delayMs","delayV","withCallback","callback","callbackV","reduceMotion","reduceMotionV","getDuration","randomDelay","randomizeDelay","getDelay","Math","random","getReduceMotion","getDelayFunction","isDelayProvided","animation","_","build"],"sources":["/Users/saruar/Desktop/color palette/color-palette/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationBuilder/BaseAnimationBuilder.ts"],"sourcesContent":["'use strict';\nimport { withDelay } from '../../animation';\nimport type {\n  EntryExitAnimationFunction,\n  AnimationFunction,\n  LayoutAnimationFunction,\n} from './commonTypes';\n\nimport { ReduceMotion } from '../../commonTypes';\nimport { getReduceMotionFromConfig } from '../../animation/util';\n\nexport class BaseAnimationBuilder {\n  durationV?: number;\n  delayV?: number;\n  reduceMotionV: ReduceMotion = ReduceMotion.System;\n  randomizeDelay = false;\n  callbackV?: (finished: boolean) => void;\n\n  static createInstance: <T extends typeof BaseAnimationBuilder>(\n    this: T\n  ) => InstanceType<T>;\n\n  build = (): EntryExitAnimationFunction | LayoutAnimationFunction => {\n    throw new Error('[Reanimated] Unimplemented method in child class.');\n  };\n\n  /**\n   * Lets you adjust the animation duration. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param durationMs - Length of the animation (in milliseconds).\n   */\n  static duration<T extends typeof BaseAnimationBuilder>(\n    this: T,\n    durationMs: number\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.duration(durationMs);\n  }\n\n  duration(durationMs: number): this {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the delay before the animation starts (in milliseconds). Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param delayMs - Delay before the animation starts (in milliseconds).\n   */\n  static delay<T extends typeof BaseAnimationBuilder>(\n    this: T,\n    delayMs: number\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.delay(delayMs);\n  }\n\n  delay(delayMs: number): this {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  /**\n   * The callback that will fire after the animation ends. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param callback - Callback that will fire after the animation ends.\n   */\n  static withCallback<T extends typeof BaseAnimationBuilder>(\n    this: T,\n    callback: (finished: boolean) => void\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.withCallback(callback);\n  }\n\n  withCallback(callback: (finished: boolean) => void): this {\n    this.callbackV = callback;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the behavior when the device's reduced motion accessibility setting is turned on.  Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param reduceMotion - Determines how the animation responds to the device's reduced motion accessibility setting. Default to `ReduceMotion.System` - {@link ReduceMotion}.\n   */\n  static reduceMotion<T extends typeof BaseAnimationBuilder>(\n    this: T,\n    reduceMotion: ReduceMotion\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.reduceMotion(reduceMotion);\n  }\n\n  reduceMotion(reduceMotionV: ReduceMotion): this {\n    this.reduceMotionV = reduceMotionV;\n    return this;\n  }\n\n  // 300ms is the default animation duration. If any animation has different default has to override this method.\n  static getDuration(): number {\n    return 300;\n  }\n\n  getDuration(): number {\n    return this.durationV ?? 300;\n  }\n\n  /**\n   * @deprecated Use `.delay()` with `Math.random()` instead\n   */\n  static randomDelay<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.randomDelay();\n  }\n\n  randomDelay(): this {\n    this.randomizeDelay = true;\n    return this;\n  }\n\n  // when randomizeDelay is set to true, randomize delay between 0 and provided value (or 1000ms if delay is not provided)\n  getDelay(): number {\n    return this.randomizeDelay\n      ? Math.random() * (this.delayV ?? 1000)\n      : this.delayV ?? 0;\n  }\n\n  getReduceMotion(): ReduceMotion {\n    return this.reduceMotionV;\n  }\n\n  getDelayFunction(): AnimationFunction {\n    const isDelayProvided = this.randomizeDelay || this.delayV;\n    const reduceMotion = this.getReduceMotion();\n    return isDelayProvided\n      ? (delay, animation) => {\n          'worklet';\n          return withDelay(delay, animation, reduceMotion);\n        }\n      : (_, animation) => {\n          'worklet';\n          animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n          return animation;\n        };\n  }\n\n  static build<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): EntryExitAnimationFunction | LayoutAnimationFunction {\n    const instance = this.createInstance();\n    return instance.build();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}