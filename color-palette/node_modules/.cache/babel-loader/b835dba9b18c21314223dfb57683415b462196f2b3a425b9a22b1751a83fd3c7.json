{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/CreatePalette.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { ChromePicker, TwitterPicker } from 'react-color';\nimport { useParams } from 'react-router-dom';\nimport { EditMyColors } from './EditMyColors';\nimport '../MyColors.css';\nimport html2canvas from 'html2canvas';\nimport { BASE_URL } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n`;\n_c = Container;\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-bottom: 20px;\n`;\n_c2 = Header;\nconst Input = styled.input`\n    padding: 8px;\n    margin-right: 10px;\n    width: 200px; // Adjust the width as needed\n`;\n_c3 = Input;\nconst ColorGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n    gap: 10px;\n    width: 100%;\n`;\n_c4 = ColorGrid;\nconst ColorSwatch = styled.div`\n  position: relative;\n  height: 250px;\n  background-color: ${props => props.color};\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  color: #fff;\n  font-weight: bold;\n  padding: 10px;\n  cursor: pointer;\n  &:hover {\n    & > button, & > div {\n      display: flex; // This ensures both the button and the div are shown\n    }\n  }\n`;\n_c5 = ColorSwatch;\nconst DeleteButton = styled.button`\n    display: none;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background-color: red;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    padding: 5px 10px;\n`;\n_c6 = DeleteButton;\nconst Button = styled.button`\n    padding: 10px 20px;\n    margin: 0 5px;\n    border: none;\n    border-radius: 5px;\n    background-color: black;\n    color: white;\n`;\n_c7 = Button;\nconst ColorPickerContainer = styled.div`\n    margin: 20px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n_c8 = ColorPickerContainer;\nexport default function CreatePalette() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    paletteName\n  } = useParams();\n  const [colors, setColors] = useState([]);\n  const [currentColor, setCurrentColor] = useState('#fff');\n  const [myColors, setMyColors] = useState([]);\n  const [name, setName] = useState('');\n  const [editingColor, setEditingColor] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const paletteRef = useRef(null);\n  useEffect(() => {\n    const loadedColors = JSON.parse(localStorage.getItem('colors')) || [];\n    setMyColors(loadedColors.map(colorObj => colorObj.hex));\n    if (paletteName) {\n      const existingPalette = JSON.parse(localStorage.getItem(`palette-${paletteName}`));\n      if (existingPalette) {\n        setColors(existingPalette.colors);\n        setName(existingPalette.name);\n      }\n    }\n  }, [paletteName]);\n  const downloadPalette = () => {\n    if (colors.length === 0) {\n      alert('Please add at least one color to the palette');\n      return;\n    }\n    html2canvas(paletteRef.current).then(canvas => {\n      const image = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.href = image;\n      link.download = 'palette.png';\n      link.click();\n    });\n  };\n  const handleColorChange = color => {\n    setCurrentColor(color.hex);\n  };\n  const addNewColor = () => {\n    if (!colors.includes(currentColor)) {\n      setColors([...colors, currentColor]);\n    }\n  };\n  const deleteColor = index => {\n    const newColors = [...colors];\n    newColors.splice(index, 1);\n    setColors(newColors);\n  };\n  const goBack = () => {\n    navigate('/my-palettes');\n  };\n  const savePalette = async () => {\n    if (name === '') {\n      alert('Please provide a name for the palette');\n      return;\n    }\n    if (colors.length === 0) {\n      alert('Please add at least one color to the palette');\n      return;\n    }\n    const hexColors = colors.filter(color => color && color.hex) // Make sure color and color.hex are defined\n    .map(color => color.hex.replace('#', ''));\n    const newPalette = {\n      name: name || paletteName,\n      colors: hexColors\n    };\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const token = userData.token;\n    const user_id = userData.userId;\n    const queryParams = new URLSearchParams({\n      palette_key: newPalette.name\n    }).toString();\n    const body = JSON.stringify(newPalette.colors);\n    try {\n      const response = await fetch(`${BASE_URL}/users/${user_id}/palettes?${queryParams}`, {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: body\n      });\n      const result = await response.json();\n      if (response.ok) {\n        localStorage.setItem(`palette-${newPalette.name}`, JSON.stringify(newPalette));\n        navigate('/my-palettes');\n      } else {\n        console.error(result.error);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const editColor = color => {\n    setEditingColor(color); // Store the hex value of the color being edited\n    setIsOpen(true); // Open the modal\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: goBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Palette Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addNewColor,\n          children: \"Add Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: savePalette,\n          children: \"Save Palette\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: downloadPalette,\n          children: \"Download Palette\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ColorPickerContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Color Picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: currentColor,\n        onChangeComplete: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TwitterPicker, {\n        colors: myColors,\n        color: currentColor,\n        onChangeComplete: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ColorGrid, {\n      ref: paletteRef,\n      children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(ColorSwatch, {\n        color: color,\n        children: [color.toUpperCase(), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          onClick: () => deleteColor(index),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editIcon\",\n          onClick: () => editColor(color),\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(EditMyColors, {\n          isOpen: isOpen,\n          onClose: () => setIsOpen(false),\n          initialColor: editingColor || '#FFFFFF',\n          onColorUpdate: newColor => {\n            const updatedColors = [...colors];\n            updatedColors[colors.indexOf(editingColor)] = newColor;\n            setColors(updatedColors);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePalette, \"RN6v5xcGSyCJSLP/e9yx/7HuLHQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c9 = CreatePalette;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"ColorGrid\");\n$RefreshReg$(_c5, \"ColorSwatch\");\n$RefreshReg$(_c6, \"DeleteButton\");\n$RefreshReg$(_c7, \"Button\");\n$RefreshReg$(_c8, \"ColorPickerContainer\");\n$RefreshReg$(_c9, \"CreatePalette\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","useNavigate","ChromePicker","TwitterPicker","useParams","EditMyColors","html2canvas","BASE_URL","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","Input","input","_c3","ColorGrid","_c4","ColorSwatch","props","color","_c5","DeleteButton","button","_c6","Button","_c7","ColorPickerContainer","_c8","CreatePalette","_s","navigate","paletteName","colors","setColors","currentColor","setCurrentColor","myColors","setMyColors","name","setName","editingColor","setEditingColor","isOpen","setIsOpen","paletteRef","loadedColors","JSON","parse","localStorage","getItem","map","colorObj","hex","existingPalette","downloadPalette","length","alert","current","then","canvas","image","toDataURL","link","document","createElement","href","download","click","handleColorChange","addNewColor","includes","deleteColor","index","newColors","splice","goBack","savePalette","hexColors","filter","replace","newPalette","userData","token","user_id","userId","queryParams","URLSearchParams","palette_key","toString","body","stringify","response","fetch","method","headers","result","json","ok","setItem","console","error","editColor","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onChangeComplete","ref","toUpperCase","className","onClose","initialColor","onColorUpdate","newColor","updatedColors","indexOf","_c9","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/CreatePalette.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { ChromePicker, TwitterPicker } from 'react-color';\nimport { useParams } from 'react-router-dom';\nimport { EditMyColors } from './EditMyColors';\nimport '../MyColors.css';\nimport html2canvas from 'html2canvas';\nimport { BASE_URL } from '../constants';\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n`;\n\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n    padding: 8px;\n    margin-right: 10px;\n    width: 200px; // Adjust the width as needed\n`;\n\nconst ColorGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n    gap: 10px;\n    width: 100%;\n`;\n\nconst ColorSwatch = styled.div`\n  position: relative;\n  height: 250px;\n  background-color: ${props => props.color};\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  color: #fff;\n  font-weight: bold;\n  padding: 10px;\n  cursor: pointer;\n  &:hover {\n    & > button, & > div {\n      display: flex; // This ensures both the button and the div are shown\n    }\n  }\n`;\n\nconst DeleteButton = styled.button`\n    display: none;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background-color: red;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    padding: 5px 10px;\n`;\n\n\nconst Button = styled.button`\n    padding: 10px 20px;\n    margin: 0 5px;\n    border: none;\n    border-radius: 5px;\n    background-color: black;\n    color: white;\n`;\n\nconst ColorPickerContainer = styled.div`\n    margin: 20px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nexport default function CreatePalette() {\n\n\n    const navigate = useNavigate();\n    const { paletteName } = useParams();\n    const [colors, setColors] = useState([]);\n    const [currentColor, setCurrentColor] = useState('#fff');\n    const [myColors, setMyColors] = useState([]);\n    const [name, setName] = useState('');\n    const [editingColor, setEditingColor] = useState(null);\n    const [isOpen, setIsOpen] = useState(false);\n    const paletteRef = useRef(null);\n\n\n\n    useEffect(() => {\n        const loadedColors = JSON.parse(localStorage.getItem('colors')) || [];\n        setMyColors(loadedColors.map(colorObj => colorObj.hex));\n\n        if (paletteName) {\n            const existingPalette = JSON.parse(localStorage.getItem(`palette-${paletteName}`));\n\n            if (existingPalette) {\n                setColors(existingPalette.colors);\n                setName(existingPalette.name);\n            }\n        }\n    }, [paletteName]);\n\n    const downloadPalette = () => {\n\n        if (colors.length === 0) {\n            alert('Please add at least one color to the palette');\n            return;\n        }\n\n        html2canvas(paletteRef.current).then(canvas => {\n            const image = canvas.toDataURL('image/png');\n            const link = document.createElement('a');\n\n\n            link.href = image;\n            link.download = 'palette.png';\n            link.click();\n        });\n    };\n\n    const handleColorChange = color => {\n        setCurrentColor(color.hex);\n    };\n\n    const addNewColor = () => {\n        if (!colors.includes(currentColor)) {\n            setColors([...colors, currentColor]);\n        }\n    };\n\n\n\n    const deleteColor = index => {\n        const newColors = [...colors];\n        newColors.splice(index, 1);\n        setColors(newColors);\n    };\n\n    const goBack = () => {\n        navigate('/my-palettes');\n    };\n\n    const savePalette = async () => {\n\n        if (name === '') {\n            alert('Please provide a name for the palette');\n            return;\n        }\n\n        if (colors.length === 0) {\n            alert('Please add at least one color to the palette');\n            return;\n        }\n\n        const hexColors = colors\n        .filter(color => color && color.hex) // Make sure color and color.hex are defined\n        .map(color => color.hex.replace('#', ''));\n\n        const newPalette = {\n            name: name || paletteName,\n            colors: hexColors\n        };\n\n\n        const userData = JSON.parse(localStorage.getItem('userData'));\n        const token = userData.token;\n        const user_id = userData.userId;\n\n        const queryParams = new URLSearchParams({ palette_key: newPalette.name }).toString();\n        const body = JSON.stringify(newPalette.colors);\n\n\n    \n\n        try {\n            const response = await fetch(`${BASE_URL}/users/${user_id}/palettes?${queryParams}`, {\n                method: 'POST',\n                headers: {\n                    'accept': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                body: body\n            });\n\n            const result = await response.json();\n\n\n            if (response.ok) {\n                localStorage.setItem(`palette-${newPalette.name}`, JSON.stringify(newPalette));\n                navigate('/my-palettes');\n            }\n            else {\n                console.error(result.error);\n            }\n\n\n        } catch (error) {\n            console.error(error);\n        }\n\n\n    };\n\n    const editColor = (color) => {\n        setEditingColor(color); // Store the hex value of the color being edited\n        setIsOpen(true); // Open the modal\n    };\n\n\n    return (\n        <Container>\n            <Header>\n                <Button onClick={goBack}>Back</Button>\n                <div>\n                    <Input\n                        placeholder=\"Palette Name\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                    <Button onClick={addNewColor}>Add Color</Button>\n                    <Button onClick={savePalette}>Save Palette</Button>\n                    <Button onClick={downloadPalette}>Download Palette</Button>\n                </div>\n            </Header>\n            <ColorPickerContainer>\n                <h3>Color Picker</h3>\n                <ChromePicker color={currentColor} onChangeComplete={handleColorChange} />\n                <h3>My Colors</h3>\n                <TwitterPicker\n                    colors={myColors}\n                    color={currentColor}\n                    onChangeComplete={handleColorChange}\n                />\n\n            </ColorPickerContainer>\n            <ColorGrid ref={paletteRef}>\n                {colors.map((color, index) => (\n                    <ColorSwatch key={index} color={color}>\n                        {color.toUpperCase()}\n                        <DeleteButton onClick={() => deleteColor(index)}>&times;</DeleteButton>\n                        <div className=\"editIcon\" onClick={() => editColor(color)}> </div>\n                        <EditMyColors\n                            isOpen={isOpen}\n                            onClose={() => setIsOpen(false)}\n                            initialColor={editingColor || '#FFFFFF'}\n                            onColorUpdate={(newColor) => {\n                                const updatedColors = [...colors];\n                                updatedColors[colors.indexOf(editingColor)] = newColor;\n                                setColors(updatedColors);\n                            }} />\n                    </ColorSwatch>\n                ))}\n            </ColorGrid>\n        </Container>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}