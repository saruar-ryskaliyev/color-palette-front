{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/Navbar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport { useAuth } from \"./AuthContext\"; // Make sure the path is correct\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Navbar() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth(); // Destructure to get user and logout from context\n\n  function handleLogout() {\n    logout(); // Call the logout function from context\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"site-title\",\n      children: \"Colorful\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav-list\",\n      children: [/*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/\",\n        children: \"Color Picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/my-colors\",\n        children: \"My Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/my-palettes\",\n        children: \"My Palettes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), user && /*#__PURE__*/_jsxDEV(CustomLink, {\n        onClick: handleLogout,\n        className: \"nav-list\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), !user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CustomLink, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(Navbar, \"SlSPRKmTohGnoLiiApupaRii2Oc=\", false, function () {\n  return [useAuth];\n});\n_c = Navbar;\nfunction CustomLink({\n  to,\n  children,\n  ...props\n}) {\n  _s2();\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({\n    path: resolvedPath.pathname,\n    end: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: isActive ? \"active\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: to,\n      ...props,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s2(CustomLink, \"Dfq6KH74NsOUUXPzETtO7DGllew=\", false, function () {\n  return [useResolvedPath, useMatch];\n});\n_c2 = CustomLink;\nvar _c, _c2;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"CustomLink\");","map":{"version":3,"names":["React","Link","useMatch","useResolvedPath","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","user","logout","handleLogout","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","CustomLink","onClick","_c","props","_s2","resolvedPath","isActive","path","pathname","end","_c2","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/Navbar.js"],"sourcesContent":["import React from \"react\";\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport { useAuth } from \"./AuthContext\"; // Make sure the path is correct\nimport './styles.css';\n\nexport default function Navbar() {\n    const { user, logout } = useAuth(); // Destructure to get user and logout from context\n\n    function handleLogout() {\n        logout(); // Call the logout function from context\n    }\n\n    return (\n        <nav className=\"nav\">\n            <Link to=\"/\" className=\"site-title\">Colorful</Link>\n            <ul className=\"nav-list\">\n                <CustomLink to=\"/\">Color Picker</CustomLink>\n                <CustomLink to=\"/my-colors\">My Colors</CustomLink>\n                <CustomLink to=\"/my-palettes\">My Palettes</CustomLink>\n                \n                {user && (\n\n                        \n                        <CustomLink onClick={handleLogout} className=\"nav-list\">Logout</CustomLink>\n\n                  \n                )}\n\n                {!user && (\n                    <>\n                        <CustomLink to=\"/login\">Login</CustomLink>\n                        <CustomLink to=\"/register\">Register</CustomLink>\n                    </>\n                )}\n            </ul>\n        </nav>\n    );\n}\n\nfunction CustomLink({ to, children, ...props }) {\n    const resolvedPath = useResolvedPath(to);\n    const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n\n    return (\n        <li className={isActive ? \"active\" : \"\"}>\n            <Link to={to} {...props}>\n                {children}\n            </Link>\n        </li>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}