{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/MyColors.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../MyColors.css';\nimport '/modals/EditMyColors.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyColors() {\n  _s();\n  const [colors, setColors] = useState(() => {\n    const storedColors = localStorage.getItem('colors');\n    return storedColors ? JSON.parse(storedColors) : [];\n  });\n  const copyToClipboard = hex => {\n    navigator.clipboard.writeText(hex).then(() => {\n      alert(`Copied ${hex} to clipboard`);\n    }).catch(err => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  const removeColor = indexToRemove => {\n    const newColors = colors.filter((_, index) => index !== indexToRemove);\n    localStorage.setItem('colors', JSON.stringify(newColors));\n    setColors(newColors);\n  };\n  const editColor = indexToEdit => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myColorsContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colorsGrid\",\n      children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colorItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colorSquare\",\n          style: {\n            backgroundColor: color.hex\n          },\n          onClick: () => copyToClipboard(color.hex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colorHex\",\n          children: color.hex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editIcon\",\n          onClick: () => editColor(index),\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleteIcon\",\n          onClick: () => removeColor(index),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(MyColors, \"tYfsP75zKB5oHcAYYQH0W+V2qU4=\");\n_c = MyColors;\nexport default MyColors;\nvar _c;\n$RefreshReg$(_c, \"MyColors\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyColors","_s","colors","setColors","storedColors","localStorage","getItem","JSON","parse","copyToClipboard","hex","navigator","clipboard","writeText","then","alert","catch","err","console","error","removeColor","indexToRemove","newColors","filter","_","index","setItem","stringify","editColor","indexToEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","color","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/MyColors.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../MyColors.css';\nimport '/modals/EditMyColors.js';\n\n\nfunction MyColors() {\n    const [colors, setColors] = useState(() => {\n        const storedColors = localStorage.getItem('colors');\n        return storedColors ? JSON.parse(storedColors) : [];\n    });\n\n    const copyToClipboard = (hex) => {\n        navigator.clipboard.writeText(hex).then(() => {\n            alert(`Copied ${hex} to clipboard`); \n        }).catch(err => {\n            console.error('Could not copy text: ', err);\n        });\n    };\n\n    const removeColor = (indexToRemove) => {\n        const newColors = colors.filter((_, index) => index !== indexToRemove);\n        localStorage.setItem('colors', JSON.stringify(newColors));\n        setColors(newColors);\n    };\n\n    const editColor = (indexToEdit) => {\n\n        \n        \n        \n    }\n\n    return (\n        <div className=\"myColorsContainer\">\n            <h1>My Colors</h1>\n            <div className=\"colorsGrid\">\n                {colors.map((color, index) => (\n                    <div key={index} className=\"colorItem\">\n                        <div\n                            className=\"colorSquare\"\n                            style={{ backgroundColor: color.hex }}\n                            onClick={() => copyToClipboard(color.hex)}\n                        ></div>\n                        <div className=\"colorHex\">{color.hex}</div>\n                        <div className=\"editIcon\" onClick={() => editColor(index)}> </div>\n                        <div className=\"deleteIcon\" onClick={() => removeColor(index)}>\n                            &times;\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MyColors;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}