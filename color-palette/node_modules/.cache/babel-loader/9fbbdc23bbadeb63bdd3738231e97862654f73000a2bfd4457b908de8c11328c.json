{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/CreatePalette.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePalette() {\n  _s();\n  const [paletteName, setPaletteName] = useState('');\n  const [selectedColors, setSelectedColors] = useState([]);\n  const history = useNavigate();\n  const goBack = () => {\n    history.push('/my-palettes'); // Change the URL to '/my-palettes', or the appropriate path\n  };\n\n  // Function to handle adding a new color to the selectedColors array\n  const addColor = color => {\n    setSelectedColors([...selectedColors, color]);\n  };\n\n  // Function to handle removing a color from the selectedColors array\n  const removeColor = colorIndex => {\n    setSelectedColors(selectedColors.filter((_, index) => index !== colorIndex));\n  };\n\n  // Function to handle palette name change\n  const handlePaletteNameChange = event => {\n    setPaletteName(event.target.value);\n  };\n\n  // Function to handle saving the palette\n  const savePalette = () => {\n    // Save palette logic here\n    // e.g., send to backend or save to local storage\n    console.log('Palette Saved:', paletteName, selectedColors);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-palette-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Color Palette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: paletteName,\n      onChange: handlePaletteNameChange,\n      placeholder: \"Enter palette name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-colors-container\",\n      children: selectedColors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeColor(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addColor,\n      children: \"Add Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: savePalette,\n      children: \"Save Palette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePalette, \"LLAmqXsXmJkPSq8zLGpB8SDhPMQ=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePalette;\nvar _c;\n$RefreshReg$(_c, \"CreatePalette\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreatePalette","_s","paletteName","setPaletteName","selectedColors","setSelectedColors","history","goBack","push","addColor","color","removeColor","colorIndex","filter","_","index","handlePaletteNameChange","event","target","value","savePalette","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/CreatePalette.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function CreatePalette() {\n  const [paletteName, setPaletteName] = useState('');\n  const [selectedColors, setSelectedColors] = useState([]);\n\n  const history = useNavigate();\n\n  const goBack = () => {\n    history.push('/my-palettes'); // Change the URL to '/my-palettes', or the appropriate path\n  };\n\n  // Function to handle adding a new color to the selectedColors array\n  const addColor = (color) => {\n    setSelectedColors([...selectedColors, color]);\n  };\n\n  // Function to handle removing a color from the selectedColors array\n  const removeColor = (colorIndex) => {\n    setSelectedColors(selectedColors.filter((_, index) => index !== colorIndex));\n  };\n\n  // Function to handle palette name change\n  const handlePaletteNameChange = (event) => {\n    setPaletteName(event.target.value);\n  };\n\n  // Function to handle saving the palette\n  const savePalette = () => {\n    // Save palette logic here\n    // e.g., send to backend or save to local storage\n    console.log('Palette Saved:', paletteName, selectedColors);\n  };\n\n  return (\n    <div className='create-palette-container'>\n      <h2>Create a New Color Palette</h2>\n      <input\n        type=\"text\"\n        value={paletteName}\n        onChange={handlePaletteNameChange}\n        placeholder=\"Enter palette name\"\n      />\n      <div className='selected-colors-container'>\n        {selectedColors.map((color, index) => (\n          <div key={index} style={{ backgroundColor: color }}>\n            <span>{color}</span>\n            <button onClick={() => removeColor(index)}>Remove</button>\n          </div>\n        ))}\n      </div>\n      <button onClick={addColor}>Add Color</button> {/* This button should trigger a color picker */}\n      <button onClick={savePalette}>Save Palette</button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}