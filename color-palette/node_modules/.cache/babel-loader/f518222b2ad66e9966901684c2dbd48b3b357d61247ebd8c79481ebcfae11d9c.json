{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { SketchPicker, HuePicker } from 'react-color';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentColor, setCurrentColor] = useState({\n    r: 255,\n    g: 255,\n    b: 102,\n    a: 1\n  });\n\n  // Convert RGB to HSL\n  const rgbToHsl = (r, g, b) => {\n    const max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    r /= 255, g /= 255, b /= 255;\n    let h,\n      s,\n      l = (max + min) / 2;\n    if (max === min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return {\n      h,\n      s,\n      l\n    };\n  };\n\n  // HSL to RGB conversion could be added similarly\n  // Placeholder for color change handlers for HSL sliders\n\n  const handleColorChange = useCallback(_.throttle(color => {\n    setCurrentColor(color.rgb);\n  }, 100), []);\n  const appStyle = {\n    backgroundColor: `rgba(${currentColor.r}, ${currentColor.g}, ${currentColor.b}, ${currentColor.a})`,\n    height: \"100vh\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: \"center\"\n  };\n  const pickerContainerStyle = {\n    marginTop: '20px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: appStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Color Palette\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n        color: currentColor,\n        onChange: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HuePicker, {\n        color: currentColor,\n        onChange: handleColorChange,\n        style: pickerContainerStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gIkZfoZpUQDp8TcFQcaVAefSJQs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useCallback","SketchPicker","HuePicker","_","jsxDEV","_jsxDEV","App","_s","currentColor","setCurrentColor","r","g","b","a","rgbToHsl","max","Math","min","h","s","l","d","handleColorChange","throttle","color","rgb","appStyle","backgroundColor","height","display","alignItems","justifyContent","textAlign","pickerContainerStyle","marginTop","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/App.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { SketchPicker, HuePicker } from 'react-color';\nimport _ from 'lodash';\n\nfunction App() {\n  const [currentColor, setCurrentColor] = useState({\n    r: 255,\n    g: 255,\n    b: 102,\n    a: 1\n  });\n\n  // Convert RGB to HSL\n  const rgbToHsl = (r, g, b) => {\n\n\n    const max = Math.max(r, g, b), min = Math.min(r, g, b);\n    r /= 255, g /= 255, b /= 255;\n    let h, s, l = (max + min) / 2;\n\n    if(max === min){\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch(max){\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n      }\n      h /= 6;\n    }\n\n    return { h, s, l };\n  };\n\n  // HSL to RGB conversion could be added similarly\n  // Placeholder for color change handlers for HSL sliders\n\n  const handleColorChange = useCallback(_.throttle((color) => {\n    setCurrentColor(color.rgb);\n  }, 100), []); \n\n  const appStyle = {\n    backgroundColor: `rgba(${currentColor.r}, ${currentColor.g}, ${currentColor.b}, ${currentColor.a})`,\n    height: \"100vh\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: \"center\",\n  };\n\n  const pickerContainerStyle = {\n    marginTop: '20px',\n  };\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <div>\n        <h1>Color Palette</h1>\n        <SketchPicker \n          color={currentColor}\n          onChange={handleColorChange}\n        />\n        {/* HSL Sliders */}\n        <HuePicker\n          color={currentColor}\n          onChange={handleColorChange}\n          style={pickerContainerStyle}\n        />\n        {/* Additional sliders for Saturation and Lightness could be added here */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}