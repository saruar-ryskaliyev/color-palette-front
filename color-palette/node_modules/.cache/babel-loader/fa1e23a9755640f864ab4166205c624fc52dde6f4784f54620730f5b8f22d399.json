{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Load user data from local storage on initial mount\n    const storedUserData = localStorage.getItem('userData');\n    if (storedUserData) {\n      setUser(JSON.parse(storedUserData));\n    }\n  }, []);\n  const login = userData => {\n    // Store user data and token in local storage\n    localStorage.setItem('userData', JSON.stringify({\n      token: userData.access_token,\n      userId: userData.user_id,\n      username: userData.username\n    }));\n    setUser({\n      token: userData.access_token,\n      userId: userData.user_id,\n      username: userData.username\n    });\n  };\n  const register = userData => {\n    // Store user data and token in local storage\n    localStorage.setItem('userData', JSON.stringify({\n      token: userData.access_token,\n      userId: userData.user_id,\n      username: userData.username\n    }));\n    setUser({\n      token: userData.access_token,\n      userId: userData.user_id,\n      username: userData.username\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('userData');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","storedUserData","localStorage","getItem","JSON","parse","login","userData","setItem","stringify","token","access_token","userId","user_id","username","register","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/AuthContext.js"],"sourcesContent":["// AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        // Load user data from local storage on initial mount\n        const storedUserData = localStorage.getItem('userData');\n        if (storedUserData) {\n            setUser(JSON.parse(storedUserData));\n        }\n    }, []);\n\n    const login = (userData) => {\n        // Store user data and token in local storage\n        localStorage.setItem('userData', JSON.stringify({\n            token: userData.access_token,\n            userId: userData.user_id,\n            username: userData.username\n        }));\n        setUser({\n            token: userData.access_token,\n            userId: userData.user_id,\n            username: userData.username\n        });\n    };\n\n\n    const register = (userData) => {\n        // Store user data and token in local storage\n        localStorage.setItem('userData', JSON.stringify({\n            token: userData.access_token,\n            userId: userData.user_id,\n            username: userData.username\n        }));\n        setUser({\n            token: userData.access_token,\n            userId: userData.user_id,\n            username: userData.username\n        });\n    };\n\n    const logout = () => {\n        localStorage.removeItem('userData');\n        setUser(null);\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,cAAc,EAAE;MAChBD,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAAC;IACvC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAIC,QAAQ,IAAK;IACxB;IACAL,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAAC;MAC5CC,KAAK,EAAEH,QAAQ,CAACI,YAAY;MAC5BC,MAAM,EAAEL,QAAQ,CAACM,OAAO;MACxBC,QAAQ,EAAEP,QAAQ,CAACO;IACvB,CAAC,CAAC,CAAC;IACHd,OAAO,CAAC;MACJU,KAAK,EAAEH,QAAQ,CAACI,YAAY;MAC5BC,MAAM,EAAEL,QAAQ,CAACM,OAAO;MACxBC,QAAQ,EAAEP,QAAQ,CAACO;IACvB,CAAC,CAAC;EACN,CAAC;EAGD,MAAMC,QAAQ,GAAIR,QAAQ,IAAK;IAC3B;IACAL,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAAC;MAC5CC,KAAK,EAAEH,QAAQ,CAACI,YAAY;MAC5BC,MAAM,EAAEL,QAAQ,CAACM,OAAO;MACxBC,QAAQ,EAAEP,QAAQ,CAACO;IACvB,CAAC,CAAC,CAAC;IACHd,OAAO,CAAC;MACJU,KAAK,EAAEH,QAAQ,CAACI,YAAY;MAC5BC,MAAM,EAAEL,QAAQ,CAACM,OAAO;MACxBC,QAAQ,EAAEP,QAAQ,CAACO;IACvB,CAAC,CAAC;EACN,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACjBd,YAAY,CAACe,UAAU,CAAC,UAAU,CAAC;IACnCjB,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIR,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEO,KAAK;MAAEU;IAAO,CAAE;IAAAnB,QAAA,EAChDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACzB,GAAA,CAlDWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}