{"ast":null,"code":"import GestureHandler from './GestureHandler';\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\n\nclass IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n  updateGestureConfig({\n    minPointers = 2,\n    maxPointers = 2,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props\n    });\n  }\n  isGestureEnabledForEvent({\n    minPointers,\n    maxPointers\n  }, _recognizer, {\n    maxPointers: pointerLength\n  }) {\n    if (pointerLength > maxPointers) {\n      return {\n        failed: true\n      };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount\n    };\n  }\n}\nexport default IndiscreteGestureHandler;","map":{"version":3,"names":["GestureHandler","IndiscreteGestureHandler","shouldEnableGestureOnSetup","updateGestureConfig","minPointers","maxPointers","props","isGestureEnabledForEvent","_recognizer","pointerLength","failed","validPointerCount","success"],"sources":["/Users/saruar/Desktop/color palette/color-palette/node_modules/react-native-gesture-handler/lib/module/web_hammer/IndiscreteGestureHandler.ts"],"sourcesContent":["import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nabstract class IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA;AACA;AACA;;AACA,MAAeC,wBAAf,SAAgDD,cAAhD,CAA+D;EAC/B,IAA1BE,0BAA0BA,CAAA,EAAG;IAC/B,OAAO,KAAP;EACD;EAEDC,mBAAmBA,CAAC;IAAEC,WAAW,GAAG,CAAhB;IAAmBC,WAAW,GAAG,CAAjC;IAAoC,GAAGC;EAAvC,CAAD,EAAiD;IAClE,OAAO,MAAMH,mBAAN,CAA0B;MAC/BC,WAD+B;MAE/BC,WAF+B;MAG/B,GAAGC;IAH4B,CAA1B,CAAP;EAKD;EAEDC,wBAAwBA,CACtB;IAAEH,WAAF;IAAeC;EAAf,CADsB,EAEtBG,WAFsB,EAGtB;IAAEH,WAAW,EAAEI;EAAf,CAHsB,EAItB;IACA,IAAIA,aAAa,GAAGJ,WAApB,EAAiC;MAC/B,OAAO;QAAEK,MAAM,EAAE;MAAV,CAAP;IACD;IACD,MAAMC,iBAAiB,GAAGF,aAAa,IAAIL,WAA3C;IACA,OAAO;MACLQ,OAAO,EAAED;IADJ,CAAP;EAGD;AAzB4D;AA2B/D,eAAeV,wBAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}