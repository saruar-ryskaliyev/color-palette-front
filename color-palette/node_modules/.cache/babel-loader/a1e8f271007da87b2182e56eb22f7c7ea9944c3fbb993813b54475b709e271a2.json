{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { apiRequest } from './api'; // Ensure this module exists and is properly defined\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async (username, password) => {\n    const details = {\n      'grant_type': 'password',\n      // Often, this is required for OAuth 2.0 password grant type, adjust as needed\n      'username': username,\n      'password': password\n      // Include other fields like 'client_id' and 'client_secret' if they are required by your backend\n    };\n    const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n    try {\n      const response = await fetch('http://localhost:8000/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: formBody\n      });\n      const data = await response.json();\n      if (response.ok) {\n        onLoginSuccess(data);\n      } else {\n        setError(data.error || 'Login failed');\n      }\n    } catch (error) {\n      setError('Network error or server is not responding');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!username || !password) {\n      setError('Both fields are required');\n      return;\n    }\n    handleLogin(username, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","apiRequest","jsxDEV","_jsxDEV","Login","onLoginSuccess","_s","username","setUsername","password","setPassword","error","setError","handleLogin","details","formBody","Object","keys","map","key","encodeURIComponent","join","response","fetch","method","headers","body","data","json","ok","handleSubmit","e","preventDefault","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { apiRequest } from './api'; // Ensure this module exists and is properly defined\n\nconst Login = ({ onLoginSuccess }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const handleLogin = async (username, password) => {\n        const details = {\n            'grant_type': 'password', // Often, this is required for OAuth 2.0 password grant type, adjust as needed\n            'username': username,\n            'password': password,\n            // Include other fields like 'client_id' and 'client_secret' if they are required by your backend\n        };\n    \n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n    \n        try {\n            const response = await fetch('http://localhost:8000/token', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: formBody,\n            });\n    \n            const data = await response.json();\n    \n            if (response.ok) {\n                onLoginSuccess(data);\n            } else {\n                setError(data.error || 'Login failed');\n            }\n        } catch (error) {\n            setError('Network error or server is not responding');\n        }\n    };\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!username || !password) {\n            setError('Both fields are required');\n            return;\n        }\n        handleLogin(username, password);\n    };\n\n    return (\n        <div className=\"login-container\">\n            <form onSubmit={handleSubmit}>\n                <h2>Login</h2>\n                {error && <p className=\"error\">{error}</p>}\n                <div>\n                    <label>Username:</label>\n                    <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}