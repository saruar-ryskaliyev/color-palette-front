{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CustomPicker, HuePicker, Saturation } from 'react-color';\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport \"./EditMyColors.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyColorPicker = ({\n  hex,\n  onChange\n}) => {\n  _s();\n  const [color, setColor] = useState(hex);\n  const handleChange = newColor => {\n    setColor(newColor.hex);\n    onChange(newColor.hex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '10px',\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(HuePi, {\n        hue: color,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '10px',\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(Saturation, {\n        color: color,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(MyColorPicker, \"yogGSUVqgPxVzIjSKbbpVp8BfzI=\");\n_c = MyColorPicker;\nconst CustomColorPicker = CustomPicker(MyColorPicker);\n_c2 = CustomColorPicker;\nexport const EditMyColors = ({\n  isOpen,\n  onClose,\n  hexColor\n}) => {\n  if (!isOpen) return null; // If the modal isn't open, don't render anything\n\n  const onWrapperClick = event => {\n    if (event.target.classList.contains(\"modal-wrapper\")) onClose();\n  };\n  const handleColorChange = hex => {\n    // Here you would handle the change of the color\n    console.log(hex); // Or update a state variable\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-wrapper\",\n    onClick: onWrapperClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-button\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(IconClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomColorPicker, {\n        hex: hexColor,\n        onChange: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c3 = EditMyColors;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MyColorPicker\");\n$RefreshReg$(_c2, \"CustomColorPicker\");\n$RefreshReg$(_c3, \"EditMyColors\");","map":{"version":3,"names":["React","useState","CustomPicker","HuePicker","Saturation","ReactComponent","IconClose","jsxDEV","_jsxDEV","MyColorPicker","hex","onChange","_s","color","setColor","handleChange","newColor","children","style","height","position","HuePi","hue","fileName","_jsxFileName","lineNumber","columnNumber","_c","CustomColorPicker","_c2","EditMyColors","isOpen","onClose","hexColor","onWrapperClick","event","target","classList","contains","handleColorChange","console","log","className","onClick","_c3","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { CustomPicker, HuePicker, Saturation } from 'react-color';\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport \"./EditMyColors.css\";\n\nconst MyColorPicker = ({ hex, onChange }) => {\n  const [color, setColor] = useState(hex);\n\n  const handleChange = (newColor) => {\n    setColor(newColor.hex);\n    onChange(newColor.hex);\n  };\n\n  return (\n    <div>\n      <div style={{ height: '10px', position: 'relative' }}>\n        <HuePi\n          hue={color}\n          onChange={handleChange}\n        />\n      </div>\n      <div style={{ height: '10px', position: 'relative' }}>\n        <Saturation\n          color={color}\n          onChange={handleChange}\n        />\n      </div>\n      {/* Lightness slider can be a custom implementation as react-color doesn't provide a direct component */}\n      {/* The value and onChange handler for the Lightness slider need to be implemented */}\n    </div>\n  );\n};\n\nconst CustomColorPicker = CustomPicker(MyColorPicker);\n\nexport const EditMyColors = ({ isOpen, onClose, hexColor }) => {\n  if (!isOpen) return null; // If the modal isn't open, don't render anything\n\n  const onWrapperClick = (event) => {\n    if (event.target.classList.contains(\"modal-wrapper\")) onClose();\n  };\n\n  const handleColorChange = (hex) => {\n    // Here you would handle the change of the color\n    console.log(hex); // Or update a state variable\n  };\n\n  return (\n    <div className=\"modal-wrapper\" onClick={onWrapperClick}>\n      <div className=\"modal-content\">\n        <button className=\"modal-close-button\" onClick={onClose}>\n          <IconClose />\n        </button>\n        <CustomColorPicker hex={hexColor} onChange={handleColorChange} />\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}