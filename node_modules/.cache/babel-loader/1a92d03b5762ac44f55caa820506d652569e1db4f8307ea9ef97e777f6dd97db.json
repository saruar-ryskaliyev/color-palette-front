{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport { ChromePicker } from 'react-color';\nimport \"./EditMyColors.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditMyColors = ({\n  isOpen,\n  onClose,\n  children\n}) => {\n  _s();\n  const [currentColor, setCurrentColor] = useState({\n    r: 255,\n    g: 255,\n    b: 255,\n    a: 1\n  });\n  if (!isOpen) return null;\n  const onWrapperClick = event => {\n    if (event.target.classList.contains(\"modal-wrapper\")) onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-wrapper\",\n    onClick: onWrapperClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-button\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(IconClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(EditMyColors, \"11VaiSpRJ6b2+ZazvacwcxDwanM=\");\n_c = EditMyColors;\nvar _c;\n$RefreshReg$(_c, \"EditMyColors\");","map":{"version":3,"names":["React","ReactComponent","IconClose","ChromePicker","jsxDEV","_jsxDEV","EditMyColors","isOpen","onClose","children","_s","currentColor","setCurrentColor","useState","r","g","b","a","onWrapperClick","event","target","classList","contains","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js"],"sourcesContent":["import React from \"react\";\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport { ChromePicker } from 'react-color';\nimport \"./EditMyColors.css\";\n\n\n\n\nexport const EditMyColors = ({ isOpen, onClose, children }) => {\n  \n  const [currentColor, setCurrentColor] = useState({\n    r: 255,\n    g: 255,\n    b: 255,\n    a: 1\n  });\n\n\n  if (!isOpen) return null; \n\n  const onWrapperClick = (event) => {\n    if (event.target.classList.contains(\"modal-wrapper\")) onClose();\n  };\n\n  return (\n    <div className=\"modal-wrapper\" onClick={onWrapperClick}>\n      <div className=\"modal-content\">\n        <button className=\"modal-close-button\" onClick={onClose}>\n          <IconClose />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,IAAIC,SAAS,QAAQ,kBAAkB;AAC9D,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK5B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE7D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC;IAC/CC,CAAC,EAAE,GAAG;IACNC,CAAC,EAAE,GAAG;IACNC,CAAC,EAAE,GAAG;IACNC,CAAC,EAAE;EACL,CAAC,CAAC;EAGF,IAAI,CAACV,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMW,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAEd,OAAO,CAAC,CAAC;EACjE,CAAC;EAED,oBACEH,OAAA;IAAKkB,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEN,cAAe;IAAAT,QAAA,eACrDJ,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAd,QAAA,gBAC5BJ,OAAA;QAAQkB,SAAS,EAAC,oBAAoB;QAACC,OAAO,EAAEhB,OAAQ;QAAAC,QAAA,eACtDJ,OAAA,CAACH,SAAS;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,EACRnB,QAAQ;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1BWJ,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}