{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { View } from 'react-native';\nexport default /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(View, _extends({\n  ref: ref,\n  accessibilityRole: \"button\"\n}, props)));","map":{"version":3,"names":["React","View","forwardRef","props","ref","createElement","_extends","accessibilityRole"],"sources":["/Users/saruar/Desktop/color palette/color-palette/node_modules/react-native-gesture-handler/lib/module/components/GestureHandlerButton.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\n\nexport default React.forwardRef<View>((props, ref) => (\n  <View ref={ref} accessibilityRole=\"button\" {...props} />\n));\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,4BAAeD,KAAK,CAACE,UAAN,CAAuB,CAACC,KAAD,EAAQC,GAAR,kBACpCJ,KAAA,CAAAK,aAAA,CAACJ,IAAD,EAAAK,QAAA;EAAMF,GAAG,EAAEA,GAAX;EAAgBG,iBAAiB,EAAC;AAAlC,GAA+CJ,KAA/C,EADa,CAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}