{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/CreatePalette.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { ChromePicker, TwitterPicker } from 'react-color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n_c = Container;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n_c2 = Header;\nconst ColorGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  gap: 10px;\n  width: 100%;\n`;\n_c3 = ColorGrid;\nconst ColorSwatch = styled.div`\n  position: relative;\n  height: 250px;\n  background-color: ${props => props.color};\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  color: #fff;\n  font-weight: bold;\n  padding: 10px;\n`;\n_c4 = ColorSwatch;\nconst DeleteButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: red;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  padding: 5px 10px;\n`;\n_c5 = DeleteButton;\nconst ColorPickerContainer = styled.div`\n  margin: 20px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n_c6 = ColorPickerContainer;\nconst MyColorsList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 10px;\n`;\nconst MyColorSwatch = styled.div`\n  width: 50px;\n  height: 50px;\n  background-color: ${props => props.color};\n  border-radius: 5px;\n  cursor: pointer;\n`;\nexport default function CreatePalette() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loadedColorObjects = JSON.parse(localStorage.getItem('colors')) || [];\n    const loadedColorStrings = loadedColorObjects.map(colorObj => colorObj.hex);\n    setMyColors(loadedColorStrings);\n  }, []);\n  const [colorFormat, setColorFormat] = useState('hex');\n  const [colors, setColors] = useState(['#1ABC9C', '#16A085', '#9B59B6', '#E74C3C', '#2C3E50']);\n  const [currentColor, setCurrentColor] = useState('#fff');\n  const [myColors, setMyColors] = useState([]);\n  const addNewColor = color => {\n    setColors([...colors, color]);\n  };\n  const handleColorChange = color => {\n    setCurrentColor(color.hex);\n  };\n  const selectMyColor = color => {\n    setCurrentColor(color);\n  };\n  const goBack = () => {\n    navigate('/my-palettes');\n  };\n  const deleteColor = index => {\n    const newColors = [...colors];\n    newColors.splice(index, 1);\n    setColors(newColors);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: goBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addNewColor(currentColor),\n        children: \"Add Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorPickerContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Color Picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: currentColor,\n        onChangeComplete: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TwitterPicker, {\n        colors: myColors,\n        color: currentColor,\n        onChangeComplete: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorGrid, {\n      children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(ColorSwatch, {\n        color: color,\n        children: [color.toUpperCase(), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          onClick: () => deleteColor(index),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePalette, \"qUjYlXdvcw90yDK+Er4gWzHTe2U=\", false, function () {\n  return [useNavigate];\n});\n_c7 = CreatePalette;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ColorGrid\");\n$RefreshReg$(_c4, \"ColorSwatch\");\n$RefreshReg$(_c5, \"DeleteButton\");\n$RefreshReg$(_c6, \"ColorPickerContainer\");\n$RefreshReg$(_c7, \"CreatePalette\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","ChromePicker","TwitterPicker","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","ColorGrid","_c3","ColorSwatch","props","color","_c4","DeleteButton","button","_c5","ColorPickerContainer","_c6","MyColorsList","MyColorSwatch","CreatePalette","_s","navigate","loadedColorObjects","JSON","parse","localStorage","getItem","loadedColorStrings","map","colorObj","hex","setMyColors","colorFormat","setColorFormat","colors","setColors","currentColor","setCurrentColor","myColors","addNewColor","handleColorChange","selectMyColor","goBack","deleteColor","index","newColors","splice","children","Button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChangeComplete","toUpperCase","_c7","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/CreatePalette.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { ChromePicker, TwitterPicker } from 'react-color';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst ColorGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  gap: 10px;\n  width: 100%;\n`;\n\nconst ColorSwatch = styled.div`\n  position: relative;\n  height: 250px;\n  background-color: ${(props) => props.color};\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  color: #fff;\n  font-weight: bold;\n  padding: 10px;\n`;\n\nconst DeleteButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: red;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  padding: 5px 10px;\n`;\n\nconst ColorPickerContainer = styled.div`\n  margin: 20px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst MyColorsList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 10px;\n`;\n\nconst MyColorSwatch = styled.div`\n  width: 50px;\n  height: 50px;\n  background-color: ${(props) => props.color};\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport default function CreatePalette() {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const loadedColorObjects = JSON.parse(localStorage.getItem('colors')) || [];\n    const loadedColorStrings = loadedColorObjects.map(colorObj => colorObj.hex);\n    setMyColors(loadedColorStrings);\n  }, []);\n\n  const [colorFormat, setColorFormat] = useState('hex');\n  const [colors, setColors] = useState([\n    '#1ABC9C',\n    '#16A085',\n    '#9B59B6',\n    '#E74C3C',\n    '#2C3E50',\n  ]);\n  const [currentColor, setCurrentColor] = useState('#fff');\n  const [myColors, setMyColors] = useState([]);\n\n  const addNewColor = (color) => {\n    setColors([...colors, color]);\n  };\n\n  const handleColorChange = (color) => {\n    setCurrentColor(color.hex);\n  };\n\n  const selectMyColor = (color) => {\n    setCurrentColor(color);\n  };\n\n  const goBack = () => {\n    navigate('/my-palettes');\n  };\n\n  const deleteColor = (index) => {\n    const newColors = [...colors];\n    newColors.splice(index, 1);\n    setColors(newColors);\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Button onClick={goBack}>Back</Button>\n        <Button onClick={() => addNewColor(currentColor)}>Add Color</Button>\n      </Header>\n      <ColorPickerContainer>\n        <h3>Color Picker</h3>\n        <ChromePicker color={currentColor} onChangeComplete={handleColorChange} />\n        <h3>My Colors</h3>\n        <TwitterPicker\n          colors={myColors}\n          color={currentColor}\n          onChangeComplete={handleColorChange}\n        />\n      </ColorPickerContainer>\n      <ColorGrid>\n        {colors.map((color, index) => (\n          <ColorSwatch key={index} color={color}>\n            {color.toUpperCase()}\n            <DeleteButton onClick={() => deleteColor(index)}>&times;</DeleteButton>\n          </ColorSwatch>\n        ))}\n      </ColorGrid>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}