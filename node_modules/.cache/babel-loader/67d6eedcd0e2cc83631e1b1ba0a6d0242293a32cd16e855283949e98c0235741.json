{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { SketchPicker } from 'react-color';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction applySaturationToColor(color, saturation) {\n  // Convert RGB to HSL, adjust saturation, and convert back to RGB\n  const {\n    r,\n    g,\n    b,\n    a\n  } = color;\n  let {\n    h,\n    s,\n    l\n  } = rgbToHsl(r, g, b);\n  s *= saturation / 100; // Scale saturation by slider\n  return hslToRgb(h, s, l, a);\n}\nfunction applyContrastToColor(color, contrast) {\n  // Formula to adjust contrast: (Color - 0.5) * contrast + 0.5\n  const factor = 259 * (contrast + 255) / (255 * (259 - contrast));\n  const adjust = c => Math.min(255, Math.max(0, factor * (c - 128) + 128));\n  return {\n    ...color,\n    r: adjust(color.r),\n    g: adjust(color.g),\n    b: adjust(color.b)\n  };\n}\n\n// Helper functions for color conversions (simplified versions)\nfunction rgbToHsl(r, g, b) {\n  // Convert RGB to HSL, actual implementation needed\n  return {\n    h: 0,\n    s: 0,\n    l: 0\n  };\n}\nfunction hslToRgb(h, s, l, a) {\n  // Convert HSL back to RGB, actual implementation needed\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a\n  };\n}\nfunction App() {\n  _s();\n  const [currentColor, setCurrentColor] = useState({\n    r: 255,\n    g: 255,\n    b: 102,\n    a: 1\n  });\n  const [saturation, setSaturation] = useState(100); // Default saturation 100%\n  const [contrast, setContrast] = useState(0); // Default contrast 0 (no change)\n\n  const handleColorChange = useCallback(color => {\n    setCurrentColor(color.rgb);\n  }, []);\n  const handleSaturationChange = event => {\n    setSaturation(parseInt(event.target.value, 10));\n  };\n  const handleContrastChange = event => {\n    setContrast(parseInt(event.target.value, 10));\n  };\n\n  // Apply saturation and contrast adjustments\n  const adjustedColor = applyContrastToColor(applySaturationToColor(currentColor, saturation), contrast);\n  const appStyle = {\n    backgroundColor: `rgba(${adjustedColor.r}, ${adjustedColor.g}, ${adjustedColor.b}, ${adjustedColor.a})`,\n    height: \"100vh\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: \"center\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: appStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Color Palette\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n        color: currentColor,\n        onChangeComplete: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Saturation: \", saturation, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"200\",\n          value: saturation,\n          onChange: handleSaturationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Contrast: \", contrast]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"-255\",\n          max: \"255\",\n          value: contrast,\n          onChange: handleContrastChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D92pytugFPta7Q2900xQXO9qFpY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","SketchPicker","_","jsxDEV","_jsxDEV","applySaturationToColor","color","saturation","r","g","b","a","h","s","l","rgbToHsl","hslToRgb","applyContrastToColor","contrast","factor","adjust","c","Math","min","max","App","_s","currentColor","setCurrentColor","setSaturation","setContrast","handleColorChange","rgb","handleSaturationChange","event","parseInt","target","value","handleContrastChange","adjustedColor","appStyle","backgroundColor","height","display","alignItems","justifyContent","textAlign","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangeComplete","type","onChange","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { SketchPicker } from 'react-color';\nimport _ from 'lodash';\n\nfunction applySaturationToColor(color, saturation) {\n  // Convert RGB to HSL, adjust saturation, and convert back to RGB\n  const { r, g, b, a } = color;\n  let { h, s, l } = rgbToHsl(r, g, b);\n  s *= saturation / 100;  // Scale saturation by slider\n  return hslToRgb(h, s, l, a);\n}\n\nfunction applyContrastToColor(color, contrast) {\n  // Formula to adjust contrast: (Color - 0.5) * contrast + 0.5\n  const factor = (259 * (contrast + 255)) / (255 * (259 - contrast));\n  const adjust = c => Math.min(255, Math.max(0, factor * (c - 128) + 128));\n  return {\n    ...color,\n    r: adjust(color.r),\n    g: adjust(color.g),\n    b: adjust(color.b),\n  };\n}\n\n// Helper functions for color conversions (simplified versions)\nfunction rgbToHsl(r, g, b) {\n  // Convert RGB to HSL, actual implementation needed\n  return { h: 0, s: 0, l: 0 };\n}\n\nfunction hslToRgb(h, s, l, a) {\n  // Convert HSL back to RGB, actual implementation needed\n  return { r: 0, g: 0, b: 0, a };\n}\n\nfunction App() {\n  const [currentColor, setCurrentColor] = useState({ r: 255, g: 255, b: 102, a: 1 });\n  const [saturation, setSaturation] = useState(100);  // Default saturation 100%\n  const [contrast, setContrast] = useState(0);        // Default contrast 0 (no change)\n\n  const handleColorChange = useCallback((color) => {\n    setCurrentColor(color.rgb);\n  }, []);\n\n  const handleSaturationChange = (event) => {\n    setSaturation(parseInt(event.target.value, 10));\n  };\n\n  const handleContrastChange = (event) => {\n    setContrast(parseInt(event.target.value, 10));\n  };\n\n  // Apply saturation and contrast adjustments\n  const adjustedColor = applyContrastToColor(applySaturationToColor(currentColor, saturation), contrast);\n\n  const appStyle = {\n    backgroundColor: `rgba(${adjustedColor.r}, ${adjustedColor.g}, ${adjustedColor.b}, ${adjustedColor.a})`,\n    height: \"100vh\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: \"center\",\n  };\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <div>\n        <h1>Color Palette</h1>\n        <SketchPicker color={currentColor} onChangeComplete={handleColorChange} />\n        <div>\n          <label>Saturation: {saturation}%</label>\n          <input type=\"range\" min=\"0\" max=\"200\" value={saturation} onChange={handleSaturationChange} />\n        </div>\n        <div>\n          <label>Contrast: {contrast}</label>\n          <input type=\"range\" min=\"-255\" max=\"255\" value={contrast} onChange={handleContrastChange} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}