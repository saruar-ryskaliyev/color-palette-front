{"ast":null,"code":"import GestureHandler from './GestureHandler';\nexport default class ManualGestureHandler extends GestureHandler {\n  init(ref, propsRef) {\n    super.init(ref, propsRef);\n  }\n  updateGestureConfig({\n    enabled = true,\n    ...props\n  }) {\n    super.updateGestureConfig({\n      enabled: enabled,\n      ...props\n    });\n  }\n  onPointerDown(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.begin();\n  }\n  onPointerAdd(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n  }\n  onPointerMove(event) {\n    this.tracker.track(event);\n    super.onPointerMove(event);\n  }\n  onPointerOutOfBounds(event) {\n    this.tracker.track(event);\n    super.onPointerOutOfBounds(event);\n  }\n  onPointerUp(event) {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n  onPointerRemove(event) {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n}","map":{"version":3,"names":["GestureHandler","ManualGestureHandler","init","ref","propsRef","updateGestureConfig","enabled","props","onPointerDown","event","tracker","addToTracker","begin","onPointerAdd","onPointerMove","track","onPointerOutOfBounds","onPointerUp","removeFromTracker","pointerId","onPointerRemove"],"sources":["/Users/saruar/Desktop/color palette/color-palette/node_modules/react-native-gesture-handler/lib/module/web/handlers/ManualGestureHandler.ts"],"sourcesContent":["import { AdaptedEvent, Config } from '../interfaces';\nimport GestureHandler from './GestureHandler';\n\nexport default class ManualGestureHandler extends GestureHandler {\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.begin();\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tracker.track(event);\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n}\n"],"mappings":"AACA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA,eAAe,MAAMC,oBAAN,SAAmCD,cAAnC,CAAkD;EACxDE,IAAIA,CAACC,GAAD,EAAcC,QAAd,EAAkD;IAC3D,MAAMF,IAAN,CAAWC,GAAX,EAAgBC,QAAhB;EACD;EAEMC,mBAAmBA,CAAC;IAAEC,OAAO,GAAG,IAAZ;IAAkB,GAAGC;EAArB,CAAD,EAA6C;IACrE,MAAMF,mBAAN,CAA0B;MAAEC,OAAO,EAAEA,OAAX;MAAoB,GAAGC;IAAvB,CAA1B;EACD;EAESC,aAAaA,CAACC,KAAD,EAA4B;IACjD,KAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAA1B;IACA,MAAMD,aAAN,CAAoBC,KAApB;IACA,KAAKG,KAAL;EACD;EAESC,YAAYA,CAACJ,KAAD,EAA4B;IAChD,KAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAA1B;IACA,MAAMI,YAAN,CAAmBJ,KAAnB;EACD;EAESK,aAAaA,CAACL,KAAD,EAA4B;IACjD,KAAKC,OAAL,CAAaK,KAAb,CAAmBN,KAAnB;IACA,MAAMK,aAAN,CAAoBL,KAApB;EACD;EAESO,oBAAoBA,CAACP,KAAD,EAA4B;IACxD,KAAKC,OAAL,CAAaK,KAAb,CAAmBN,KAAnB;IACA,MAAMO,oBAAN,CAA2BP,KAA3B;EACD;EAESQ,WAAWA,CAACR,KAAD,EAA4B;IAC/C,MAAMQ,WAAN,CAAkBR,KAAlB;IACA,KAAKC,OAAL,CAAaQ,iBAAb,CAA+BT,KAAK,CAACU,SAArC;EACD;EAESC,eAAeA,CAACX,KAAD,EAA4B;IACnD,MAAMW,eAAN,CAAsBX,KAAtB;IACA,KAAKC,OAAL,CAAaQ,iBAAb,CAA+BT,KAAK,CAACU,SAArC;EACD;AAtC8D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}