{"ast":null,"code":"'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { ComplexAnimationBuilder } from '../animationBuilder';\n\n/**\n * Stretch animation on the X axis. You can modify the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations/#stretch\n */\nexport class StretchInX extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"build\", () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      const initialValues = this.initialValues;\n      return () => {\n        'worklet';\n\n        return {\n          animations: {\n            transform: [{\n              scaleX: delayFunction(delay, animation(1, config))\n            }]\n          },\n          initialValues: {\n            transform: [{\n              scaleX: 0\n            }],\n            ...initialValues\n          },\n          callback\n        };\n      };\n    });\n  }\n  static createInstance() {\n    return new StretchInX();\n  }\n}\n\n/**\n * Stretch animation on the Y axis. You can modify the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations/#stretch\n */\n_defineProperty(StretchInX, \"presetName\", 'StretchInX');\nexport class StretchInY extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"build\", () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      const initialValues = this.initialValues;\n      return () => {\n        'worklet';\n\n        return {\n          animations: {\n            transform: [{\n              scaleY: delayFunction(delay, animation(1, config))\n            }]\n          },\n          initialValues: {\n            transform: [{\n              scaleY: 0\n            }],\n            ...initialValues\n          },\n          callback\n        };\n      };\n    });\n  }\n  static createInstance() {\n    return new StretchInY();\n  }\n}\n\n/**\n * Stretch animation on the X axis. You can modify the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations/#stretch\n */\n_defineProperty(StretchInY, \"presetName\", 'StretchInY');\nexport class StretchOutX extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"build\", () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      const initialValues = this.initialValues;\n      return () => {\n        'worklet';\n\n        return {\n          animations: {\n            transform: [{\n              scaleX: delayFunction(delay, animation(0, config))\n            }]\n          },\n          initialValues: {\n            transform: [{\n              scaleX: 1\n            }],\n            ...initialValues\n          },\n          callback\n        };\n      };\n    });\n  }\n  static createInstance() {\n    return new StretchOutX();\n  }\n}\n\n/**\n * Stretch animation on the Y axis. You can modify the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations/#stretch\n */\n_defineProperty(StretchOutX, \"presetName\", 'StretchOutX');\nexport class StretchOutY extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"build\", () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      const initialValues = this.initialValues;\n      return () => {\n        'worklet';\n\n        return {\n          animations: {\n            transform: [{\n              scaleY: delayFunction(delay, animation(0, config))\n            }]\n          },\n          initialValues: {\n            transform: [{\n              scaleY: 1\n            }],\n            ...initialValues\n          },\n          callback\n        };\n      };\n    });\n  }\n  static createInstance() {\n    return new StretchOutY();\n  }\n}\n_defineProperty(StretchOutY, \"presetName\", 'StretchOutY');","map":{"version":3,"names":["_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ComplexAnimationBuilder","StretchInX","constructor","arguments","delayFunction","getDelayFunction","animation","config","getAnimationAndConfig","delay","getDelay","callback","callbackV","initialValues","animations","transform","scaleX","createInstance","StretchInY","scaleY","StretchOutX","StretchOutY"],"sources":["/Users/saruar/Desktop/color palette/color-palette/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/defaultAnimations/Stretch.ts"],"sourcesContent":["'use strict';\nimport type {\n  IEntryExitAnimationBuilder,\n  EntryExitAnimationFunction,\n} from '../animationBuilder/commonTypes';\nimport type { BaseAnimationBuilder } from '../animationBuilder';\nimport { ComplexAnimationBuilder } from '../animationBuilder';\n\n/**\n * Stretch animation on the X axis. You can modify the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations/#stretch\n */\nexport class StretchInX\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'StretchInX';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new StretchInX() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          transform: [{ scaleX: delayFunction(delay, animation(1, config)) }],\n        },\n        initialValues: {\n          transform: [{ scaleX: 0 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Stretch animation on the Y axis. You can modify the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations/#stretch\n */\nexport class StretchInY\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'StretchInY';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new StretchInY() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          transform: [{ scaleY: delayFunction(delay, animation(1, config)) }],\n        },\n        initialValues: {\n          transform: [{ scaleY: 0 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Stretch animation on the X axis. You can modify the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations/#stretch\n */\nexport class StretchOutX\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'StretchOutX';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new StretchOutX() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          transform: [{ scaleX: delayFunction(delay, animation(0, config)) }],\n        },\n        initialValues: {\n          transform: [{ scaleX: 1 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Stretch animation on the Y axis. You can modify the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations/#stretch\n */\nexport class StretchOutY\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'StretchOutY';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new StretchOutY() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          transform: [{ scaleY: delayFunction(delay, animation(0, config)) }],\n        },\n        initialValues: {\n          transform: [{ scaleY: 1 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}