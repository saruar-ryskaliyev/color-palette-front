{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { ChromePicker } from 'react-color';\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport \"./EditMyColors.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditMyColors = ({\n  isOpen,\n  onClose,\n  initialColor\n}) => {\n  _s();\n  const [currentColor, setCurrentColor] = useState(initialColor);\n\n  // Using an effect to ensure `currentColor` is updated whenever `initialColor` changes\n  useEffect(() => {\n    setCurrentColor(initialColor);\n  }, [initialColor]);\n  const handleColorChange = color => {\n    setCurrentColor(color.rgb); // Direct update to currentColor for the ChromePicker\n  };\n  const handleSaveColor = () => {\n    const existingColors = JSON.parse(localStorage.getItem('colors')) || [];\n    const colorToSave = currentColor.hex || currentColor; // Adjust based on your color object structure\n\n    if (existingColors.includes(colorToSave)) {\n      alert(\"This color already exists.\");\n    } else {\n      const updatedColors = [...existingColors, colorToSave];\n      localStorage.setItem('colors', JSON.stringify(updatedColors));\n      onClose(); // Close the modal after saving\n    }\n  };\n  const handleCancel = () => {\n    onClose(); // Simply close the modal\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-wrapper\",\n    onClick: () => onClose(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-button\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(IconClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: currentColor,\n        onChangeComplete: handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveColor,\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(EditMyColors, \"Be2e4O/jwkOE1W1U4+lyWISWGWQ=\");\n_c = EditMyColors;\nvar _c;\n$RefreshReg$(_c, \"EditMyColors\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChromePicker","ReactComponent","IconClose","jsxDEV","_jsxDEV","EditMyColors","isOpen","onClose","initialColor","_s","currentColor","setCurrentColor","handleColorChange","color","rgb","handleSaveColor","existingColors","JSON","parse","localStorage","getItem","colorToSave","hex","includes","alert","updatedColors","setItem","stringify","handleCancel","className","onClick","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onChangeComplete","marginRight","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { ChromePicker } from 'react-color';\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport \"./EditMyColors.css\";\n\nexport const EditMyColors = ({ isOpen, onClose, initialColor }) => {\n  const [currentColor, setCurrentColor] = useState(initialColor);\n\n  // Using an effect to ensure `currentColor` is updated whenever `initialColor` changes\n  useEffect(() => {\n    setCurrentColor(initialColor);\n  }, [initialColor]);\n\n  const handleColorChange = (color) => {\n    setCurrentColor(color.rgb); // Direct update to currentColor for the ChromePicker\n  };\n\n  const handleSaveColor = () => {\n    const existingColors = JSON.parse(localStorage.getItem('colors')) || [];\n    const colorToSave = currentColor.hex || currentColor; // Adjust based on your color object structure\n\n    if (existingColors.includes(colorToSave)) {\n      alert(\"This color already exists.\");\n    } else {\n      const updatedColors = [...existingColors, colorToSave];\n      localStorage.setItem('colors', JSON.stringify(updatedColors));\n      onClose(); // Close the modal after saving\n    }\n  };\n\n  const handleCancel = () => {\n    onClose(); // Simply close the modal\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-wrapper\" onClick={() => onClose()}>\n      <div className=\"modal-content\" style={{ textAlign: 'center' }}>\n        <button className=\"modal-close-button\" onClick={onClose}>\n          <IconClose />\n        </button>\n        <ChromePicker\n          color={currentColor}\n          onChangeComplete={handleColorChange}\n        />\n        <div>\n          <button onClick={handleSaveColor} style={{ marginRight: '10px' }}>Save</button>\n          <button onClick={handleCancel}>Cancel</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,cAAc,IAAIC,SAAS,QAAQ,kBAAkB;AAC9D,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACW,YAAY,CAAC;;EAE9D;EACAV,SAAS,CAAC,MAAM;IACda,eAAe,CAACH,YAAY,CAAC;EAC/B,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,eAAe,CAACE,KAAK,CAACC,GAAG,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE;IACvE,MAAMC,WAAW,GAAGX,YAAY,CAACY,GAAG,IAAIZ,YAAY,CAAC,CAAC;;IAEtD,IAAIM,cAAc,CAACO,QAAQ,CAACF,WAAW,CAAC,EAAE;MACxCG,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,MAAM;MACL,MAAMC,aAAa,GAAG,CAAC,GAAGT,cAAc,EAAEK,WAAW,CAAC;MACtDF,YAAY,CAACO,OAAO,CAAC,QAAQ,EAAET,IAAI,CAACU,SAAS,CAACF,aAAa,CAAC,CAAC;MAC7DlB,OAAO,CAAC,CAAC,CAAC,CAAC;IACb;EACF,CAAC;EAED,MAAMqB,YAAY,GAAGA,CAAA,KAAM;IACzBrB,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC;EAED,IAAI,CAACD,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEF,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEA,CAAA,KAAMvB,OAAO,CAAC,CAAE;IAAAwB,QAAA,eACtD3B,OAAA;MAAKyB,SAAS,EAAC,eAAe;MAACG,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,gBAC5D3B,OAAA;QAAQyB,SAAS,EAAC,oBAAoB;QAACC,OAAO,EAAEvB,OAAQ;QAAAwB,QAAA,eACtD3B,OAAA,CAACF,SAAS;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACTjC,OAAA,CAACJ,YAAY;QACXa,KAAK,EAAEH,YAAa;QACpB4B,gBAAgB,EAAE1B;MAAkB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFjC,OAAA;QAAA2B,QAAA,gBACE3B,OAAA;UAAQ0B,OAAO,EAAEf,eAAgB;UAACiB,KAAK,EAAE;YAAEO,WAAW,EAAE;UAAO,CAAE;UAAAR,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/EjC,OAAA;UAAQ0B,OAAO,EAAEF,YAAa;UAAAG,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAhDWJ,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}