{"ast":null,"code":"var _jsxFileName = \"/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { PhotoshopPicker } from 'react-color';\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport \"./EditMyColors.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditMyColors = ({\n  isOpen,\n  onClose,\n  initialColor,\n  onColorUpdate\n}) => {\n  _s();\n  const [currentColor, setCurrentColor] = useState(initialColor);\n  const [key, setKey] = useState(Date.now()); // Unique key based on timestamp\n\n  useEffect(() => {\n    setCurrentColor(initialColor);\n    setKey(Date.now()); // Update key to force remount whenever initialColor changes\n  }, [initialColor, isOpen]); // Also trigger when isOpen changes to handle modal reopening\n\n  const handleColorChange = color => {\n    setCurrentColor(color.hex); // Update only the local state\n  };\n  const handleSave = () => {\n    if (onColorUpdate) {\n      onColorUpdate(currentColor); // Call the update function only on save\n    }\n    onClose();\n  };\n  const handleCancel = () => {\n    onClose();\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-wrapper\",\n    onClick: event => {\n      if (event.target.classList.contains(\"modal-wrapper\")) onClose();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-button\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(IconClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PhotoshopPicker, {\n        // Use the dynamic key here\n        color: currentColor,\n        onChangeComplete: handleColorChange,\n        onAccept: handleSave,\n        onCancel: handleCancel\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(EditMyColors, \"TctcqL6q/18kDlWUrclfkoHGWVY=\");\n_c = EditMyColors;\nvar _c;\n$RefreshReg$(_c, \"EditMyColors\");","map":{"version":3,"names":["React","useState","useEffect","PhotoshopPicker","ReactComponent","IconClose","jsxDEV","_jsxDEV","EditMyColors","isOpen","onClose","initialColor","onColorUpdate","_s","currentColor","setCurrentColor","key","setKey","Date","now","handleColorChange","color","hex","handleSave","handleCancel","className","onClick","event","target","classList","contains","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onChangeComplete","onAccept","onCancel","_c","$RefreshReg$"],"sources":["/Users/saruar/Desktop/color palette/color-palette/src/pages/EditMyColors.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PhotoshopPicker } from 'react-color';\nimport { ReactComponent as IconClose } from \"./icon-close.svg\";\nimport \"./EditMyColors.css\";\n\nexport const EditMyColors = ({ isOpen, onClose, initialColor, onColorUpdate }) => {\n  const [currentColor, setCurrentColor] = useState(initialColor);\n  const [key, setKey] = useState(Date.now()); // Unique key based on timestamp\n\n  useEffect(() => {\n    setCurrentColor(initialColor);\n    setKey(Date.now()); // Update key to force remount whenever initialColor changes\n  }, [initialColor, isOpen]); // Also trigger when isOpen changes to handle modal reopening\n\n  const handleColorChange = (color) => {\n    setCurrentColor(color.hex); // Update only the local state\n  };\n\n  const handleSave = () => {\n    if (onColorUpdate) {\n      onColorUpdate(currentColor); // Call the update function only on save\n    }\n    onClose(); \n  };\n\n  const handleCancel = () => {\n    onClose(); \n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-wrapper\" onClick={(event) => {\n      if (event.target.classList.contains(\"modal-wrapper\")) onClose();\n    }}>\n      <div className=\"modal-content\" style={{ textAlign: 'center' }}>\n        <button className=\"modal-close-button\" onClick={onClose}>\n          <IconClose />\n        </button>\n        <PhotoshopPicker\n          key={key} // Use the dynamic key here\n          color={currentColor}\n          onChangeComplete={handleColorChange}\n          onAccept={handleSave}\n          onCancel={handleCancel}\n        />\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,aAAa;AAC7C,SAASC,cAAc,IAAIC,SAAS,QAAQ,kBAAkB;AAC9D,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,YAAY;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACU,YAAY,CAAC;EAC9D,MAAM,CAACK,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAACiB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE5CjB,SAAS,CAAC,MAAM;IACda,eAAe,CAACJ,YAAY,CAAC;IAC7BM,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,CAACR,YAAY,EAAEF,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE5B,MAAMW,iBAAiB,GAAIC,KAAK,IAAK;IACnCN,eAAe,CAACM,KAAK,CAACC,GAAG,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIX,aAAa,EAAE;MACjBA,aAAa,CAACE,YAAY,CAAC,CAAC,CAAC;IAC/B;IACAJ,OAAO,CAAC,CAAC;EACX,CAAC;EAED,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzBd,OAAO,CAAC,CAAC;EACX,CAAC;EAED,IAAI,CAACD,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEF,OAAA;IAAKkB,SAAS,EAAC,eAAe;IAACC,OAAO,EAAGC,KAAK,IAAK;MACjD,IAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAEpB,OAAO,CAAC,CAAC;IACjE,CAAE;IAAAqB,QAAA,eACAxB,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAACO,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,gBAC5DxB,OAAA;QAAQkB,SAAS,EAAC,oBAAoB;QAACC,OAAO,EAAEhB,OAAQ;QAAAqB,QAAA,eACtDxB,OAAA,CAACF,SAAS;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACT9B,OAAA,CAACJ,eAAe;QACJ;QACVkB,KAAK,EAAEP,YAAa;QACpBwB,gBAAgB,EAAElB,iBAAkB;QACpCmB,QAAQ,EAAEhB,UAAW;QACrBiB,QAAQ,EAAEhB;MAAa,GAJlBR,GAAG;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA5CWL,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}